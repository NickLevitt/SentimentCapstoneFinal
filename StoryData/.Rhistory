phenotbl <- dbGetQuery(con,"SELECT * FROM Phenotype")
phenoname <- phenotbl$name
phenoname <- phenoname[!(phenoname%in%phenotypes.to.exclude)]
phenoname <- c(phenoname[which(phenoname=="fruitnum")],phenoname[-which(phenoname=="fruitnum")])
alldf = list()
slimListIndx = c()
for (i in 1:length(phenoname)) {
query <- paste("SELECT Go.GoSlim, Ga.Accession_idAccession, Ph.name, O.value, T.name, E.name, F.Name FROM GeneOntology Go",
" JOIN GeneAccession Ga ON Go.Gene_idGene = Ga.Gene_idGene",
" JOIN IndividualPlant Pl ON Ga.Accession_idAccession = Pl.Accession_idAccession",
" JOIN Observation O ON Pl.idIndividualPlant = O.IndividualPlant_idIndividualPlant",
" JOIN Phenotype Ph ON O.Phenotype_idPhenotype = Ph.idPhenotype",
" JOIN Experiment E ON Pl.Experiment_idExperiment = E.idExperiment",
" JOIN Treatment T ON O.Treatment_idTreatment = T.idTreatment",
" JOIN Facility F ON Pl.Facility_idFacility = F.idFacility",
" WHERE Ph.name = '", phenoname[i], "'",
sep="")
df <- dbGetQuery(con,query)
names(df) <- c("slim","line","phenotype","value","treatment","experiment", "facility")
name = paste(phenoname[i], '_slims', sep='')
slimListIndx[i] = name
alldf[[i]] = df
print(i)
}
save(alldf, file='allSlimData')
phenoname <- phenoname[!(phenoname%in%phenotypes.to.exclude)]
phenoname <- c(phenoname[which(phenoname=="fruitnum")],phenoname[-which(phenoname=="fruitnum")])
name = paste(phenoname[i], '_slims', sep='')
name
shiny::runApp('goSlim')
setwd("~/Desktop/SentimentCap/StoryData")
data = read.csv('KareninaSent.csv')
View(data)
data = read.csv('KareninaSent.csv', header = FALSE)
View(data)
x = data[0,0]
x
x = data[1,1]
x
View(data)
c = x[1,]
x = t(data)
View(x)
data = read.csv('KareninaSent.csv', header = FALSE)
View(data)
x = t(data)
x[1,1]
typeof(x[1,1])
as.double(data)
data = read.csv('OzSent.csv', header = FALSE)
View(data)
typeof(x[1,1])
data = read.csv('KareninaSent.csv', header = FALSE)
data = t(data)
names(data) = c('JOY','FEAR','ANGER','SADNESS','DISGUST','SHAME','GUILT')
View(data)
data = read.csv('KareninaSent.csv', header = FALSE)
data = t(data)
cnames(data) = c('JOY','FEAR','ANGER','SADNESS','DISGUST','SHAME','GUILT')
colnames(data) = c('JOY','FEAR','ANGER','SADNESS','DISGUST','SHAME','GUILT')
View(data)
data = as.data.frame(read.csv('KareninaSent.csv', header = FALSE))
data = t(data)
colnames(data) = c('JOY','FEAR','ANGER','SADNESS','DISGUST','SHAME','GUILT')
data = as.data.frame(read.csv('KareninaSent.csv', header = FALSE))
typeof(data)
data = as.data.frame(data)
typeof(data)
data = t(data)
typeof(data)
as.data.frame(data)
data = as.data.frame(data)
typeof(data)
View(data)
data = as.data.frame(read.csv('KareninaSent.csv', header = FALSE))
data = as.data.frame(t(data))
colnames(data) = c('JOY','FEAR','ANGER','SADNESS','DISGUST','SHAME','GUILT')
View(data)
data$JOY
library(ggplot2)
setwd("~/Desktop/SentimentCap/StoryData")
df = as.data.frame(read.csv('KareninaSent.csv', header = FALSE))
df = as.data.frame(t(df))
colnames(df) = c('JOY','FEAR','ANGER','SADNESS','DISGUST','SHAME','GUILT')
p = ggplot(df)
p + geom_line()
p = ggplot(df, aes(x = JOY))
p + geom_line()
source('~/Desktop/SentimentCap/StoryData/storyViz.R')
View(df)
seq(0,50)
seq(1,50)
qplot(JOY, seq(1,50), data=df, geom="line")
qplot(JOY, data=df, geom="line")
df = as.data.frame(read.csv('KareninaSent.csv', header = FALSE))
df = as.data.frame(t(df))
colnames(df) = c('JOY','FEAR','ANGER','SADNESS','DISGUST','SHAME','GUILT')
p = ggplot(df, aes(x = JOY, y = seq(1,50)))
p + geom_line()
p + geom_line() + ylab('')
p = ggplot(df, aes(x = JOY, y = seq(1,50)))
p + stat_smooth() + ylab('')
p + geom_line() + stat_smooth() + ylab('')
p + stat_smooth() + geom_point()
p + stat_smooth() + geom_point() + ylab('')
source('~/Desktop/SentimentCap/StoryData/storyViz.R')
mdata = melt(data)
mdata
df = as.data.frame(read.csv('KareninaSent.csv', header = FALSE))
df
View(df)
append(df, c('JOY','FEAR','ANGER','SADNESS','DISGUST','SHAME','GUILT')
)
df = append(df, c('JOY','FEAR','ANGER','SADNESS','DISGUST','SHAME','GUILT'))
df = as.data.frame(df)
View(df)
df = as.data.frame(read.csv('KareninaSent.csv', header = FALSE))
df = as.data.frame(t(df))
colnames(df) = c('JOY','FEAR','ANGER','SADNESS','DISGUST','SHAME','GUILT')
View(df)
for(i in 1:7) {
print (i)
}
df = as.data.frame(read.csv('KareninaSent.csv', header = FALSE))
df[,1]
rep('JOY', 10)
add = df[1,]
dff = data.frame()
add = df[1,]
len(add)
length(add)
i = 1
add = df[i,]
add2 = rep(names[i], len(add))
names = c('JOY','FEAR','ANGER','SADNESS','DISGUST','SHAME','GUILT')
add = df[i,]
add2 = rep(names[i], len(add))
add = df[i,]
add2 = rep(names[i], length(add))
add2
add
dff.append(add)
append(dff,add)
x = append(dff,add)
as.data.frame(x)
x = append(x,add2)
as.data.frame(x)
dff = data.frame(ncol = 7, nrow = 50)
View(dff)
dff = matrix(0, ncol = 7, nrow = 50)
View(dff)
dff = as.data.frame(matrix(0, ncol = 7, nrow = 50))
View(dff)
dff = as.data.frame(matrix(0, ncol = 2, nrow = 50*7))
View(dff)
dff = as.data.frame(matrix(0, ncol = 2, nrow = 50*7))
names = c('JOY','FEAR','ANGER','SADNESS','DISGUST','SHAME','GUILT')
for(i in 1:7) {
dff[((i-1)*50):(i*50),1] = df[i,]
dff[((i-1)*50):(i*50),2] = rep(names[i], length(add))
}
dff[((i-1)*50):(i*50),1]
View(dff)
i
df = as.data.frame(read.csv('KareninaSent.csv', header = FALSE))
dff = as.data.frame(matrix(0, ncol = 2, nrow = 50*7))
names = c('JOY','FEAR','ANGER','SADNESS','DISGUST','SHAME','GUILT')
for(i in 1:7) {
dff[((i-1)*50):(i*50),1] = df[i,]
dff[((i-1)*50):(i*50),2] = rep(names[i], 50)
}
for(i in 1:7) {
dff[((i-1)*50):(i*50),1] = df[i,]
dff[((i-1)*50):(i*50),2] = rep(names[i], 50)
print(i)
}
View(dff)
View(df)
library(ggplot2)
library(reshape)
setwd("~/Desktop/SentimentCap/StoryData")
df = as.data.frame(read.csv('KareninaSent.csv', header = FALSE))
dff = as.data.frame(matrix(0, ncol = 2, nrow = 50*7))
names = c('JOY','FEAR','ANGER','SADNESS','DISGUST','SHAME','GUILT')
for(i in 1:7) {
dff[((i-1)*50):(i*50),1] = df[,i]
dff[((i-1)*50):(i*50),2] = rep(names[i], 50)
}
View(dff)
df[,1]
df[i,]
(i-1)*50
i*50
for(i in 1:7) {
col1 = append(col1,df[i,])
col2 = append(col2m, rep(names[i], 50))
}
df = as.data.frame(read.csv('KareninaSent.csv', header = FALSE))
dff = as.data.frame(matrix(0, ncol = 2, nrow = 50*7))
names = c('JOY','FEAR','ANGER','SADNESS','DISGUST','SHAME','GUILT')
col1 = c()
col2= c()
for(i in 1:7) {
col1 = append(col1,df[i,])
col2 = append(col2m, rep(names[i], 50))
}
df = as.data.frame(read.csv('KareninaSent.csv', header = FALSE))
dff = as.data.frame(matrix(0, ncol = 2, nrow = 50*7))
names = c('JOY','FEAR','ANGER','SADNESS','DISGUST','SHAME','GUILT')
col1 = c()
col2= c()
for(i in 1:7) {
col1 = append(col1,df[i,])
col2 = append(col2, rep(names[i], 50))
}
length(col1)
length(col2)
dff[,1] = col1
dff[,2] = col2
dff[,1]
dff[,2]
View(dff)
col1
typeof(col1)
as.data.frame(col1)
col1 = as.data.frame(col1)
View(col1)
dff[,1] = col1
col1[1,]
dff[,1] = col1[1,]
dff = (matrix(0, ncol = 2, nrow = 50*7)
)
dff
dff[,1]
dff[,1] = col1
dff
dff = (matrix(0, ncol = 2, nrow = 50*7)
)
source('~/Desktop/SentimentCap/StoryData/storyViz.R')
dff[,2]
dff[[1]]
dff = matrix(0, ncol = 2, nrow = 50*7)
dff[,1]
dff[,2]
dff[,2] = col2
View(dff)
for(i in 1:7) {
col1 = append(col1,df[i,])
col2 = append(col2, rep(names[i], 50))
}
col1
dff[,1] = col1
df = as.data.frame(read.csv('KareninaSent.csv', header = FALSE))
dff = matrix(0, ncol = 2, nrow = 50*7)
names = c('JOY','FEAR','ANGER','SADNESS','DISGUST','SHAME','GUILT')
col1 = c()
col2= c()
for(i in 1:7) {
col1 = append(col1,df[i,])
col2 = append(col2, rep(names[i], 50))
}
dff[,2] = col2
View(dff)
dff[,1] = col1
dff
col1 = c()
col2= c()
col3 = c()
for(i in 1:7) {
col1 = append(col1,df[i,])
col2 = append(col2, rep(names[i], 50))
col3 = append(col3, seq(1,50))
}
col1
col2
col3
typeof(col1)
typeof(col2)
typeof(col3)
as.list(col2)
as.list(col3)
as.data.frame(col1)
as.data.frame(col2)
as.data.frame(col3)
as.data.frame(col2)
as.data.frame(col1)
x = data.frame(value = col1, emot = col2, time = col3)
View(x)
x = data.frame(value = as.data.frame(col1), emot = col2, time = col3)
x
View(x)
View(col1)
c(col1)
col1
col1 = as.data.frame(col1)
View(col1)
c(col1)
typeof(df[,1])
typeof(seq(1,50))
c(df[,1])
c(df[1,])
c(df[1,1])
typeof(df[1,1])
df[1,1]
x = c()
x = append(x, df[1,1])
typeof(x)
y = data.frame(t1 = x, t2 = x, t3 = x)
View(y)
col1 = c()
col2= c()
col3 = c()
for(i in 1:7) {
for j in range(1:50) {
col1 = append(col1,c(df[i,j])
}
col2 = append(col2, rep(names[i], 50))
col3 = append(col3, seq(1,50))
}
col1 = c()
col2= c()
col3 = c()
for(i in 1:7) {
for (j in 1:50) {
col1 = append(col1, df[i,j])
}
col2 = append(col2, rep(names[i], 50))
col3 = append(col3, seq(1,50))
}
col1
x = data.frame(value = col1, emot = col2, time = col3)
View(x)
source('~/Desktop/SentimentCap/StoryData/storyViz.R')
View(df)
p = ggplot(df, aes(x = value, y = time, color = factor(emot)))
p + geom_smooth
p + geom_smooth()
p = ggplot(df, aes(x = value, color = factor(emot)))
p + geom_smooth()
p = ggplot(df, aes(x = time, y = value color = factor(emot)))
p = ggplot(df, aes(x = time, y = value, color = factor(emot)))
p + geom_smooth()
p + geom_smooth( se = FALSE)
p + geom_smooth(se = FALSE) + geom_point()
p + geom_smooth(se = FALSE) + geom_point() + geom_line()
p + geom_smooth(se = FALSE, level = .5) + geom_point()
p + geom_smooth(se = FALSE, level = .1) + geom_point()
p + geom_smooth(se = FALSE, level = .9) + geom_point()
p + geom_smooth(se = FALSE, method = lm) + geom_point()
p + geom_smooth(se = FALSE, method = rlm) + geom_point()
p + geom_smooth(se = FALSE, method = 'rlm') + geom_point()
p + geom_smooth(se = FALSE) + geom_point()
source('~/Desktop/SentimentCap/StoryData/storyViz.R')
p + geom_smooth(se = FALSE) + geom_point() + geom_line()
library(ggplot2)
library(shiny)
getwd()
runApp('storyApp/')
View(df)
emots = c('JOY', 'SHAME')
emots
dff = df
dff[which(dff$emot == emots),]
x = dff[which(dff$emot == emots),]
View(x)
View(dff)
which(dff$emot == emots)
which(dff$emot == 'JOY')
which(dff$emot == 'SHAME')
which(dff$emot == ('SHAME' | 'JOY'))
emots
emots = c('JOY', 'FEAR')
which(dff$emot == emots)
View(dff)
shiny::runApp('storyApp')
emotnames = c('JOY','FEAR','ANGER','SADNESS','DISGUST','SHAME','GUILT')
emots
which(emotnames == emots)
emots %in% emotnames
emotnames %in% emots
which(emotnames %in% emots)
emots = c('JOY', 'GUILT')
which(emotnames %in% emots)
7*50
6*50
which(df$emot == emots)
df$emot[1:10]
which(df$emot[1:10] == emots)
df$emot[2]
df$emot[2] == 'JOY'
df$emot[4] == 'JOY'
length(df$emot)
indx = c()
for(i in 1:length(df$emot)) {
if (df$emot[i] == emots) {
indx = append(indx,i)
}
indx
df$emot[4]
df$emot[4] == emots
df$emot[3] == emots
warnings()
any?
?
?any
any(c(TRUE,FALSE))
indx = c()
for(i in 1:length(df$emot)) {
if(any(df$emot[i] == emots)) {
indx = append(indx,i)
}
indx
which(any(df$emot == emots))
shiny::runApp('storyApp')
df = as.data.frame(read.csv('DraculaSent.csv', header = FALSE))
names = c('JOY','FEAR','ANGER','SADNESS','DISGUST','SHAME','GUILT')
col1 = c()
col2= c()
col3 = c()
for(i in 1:7) {
for (j in 1:50) {
col1 = append(col1, df[i,j])
}
col2 = append(col2, rep(names[i], 50))
col3 = append(col3, seq(1,50))
}
df = data.frame(value = col1, emot = col2, time = col3)
View(df)
df = as.data.frame(read.csv('DraculaSent.csv', header = FALSE))
View(df)
max(df[,1])
max(df[,2])
max(df[,3])
max(df[,4])
max(df[,5])
max(df[,6])
max(df[,7])
for(i in 1:7) {
for (j in 1:50) {
col1 = append(col1, df[i,j])
}
col2 = append(col2, rep(names[i], 50))
col3 = append(col3, seq(1,50))
}
max(col1)
max(col2)
max(col3)
View(col1)
col1
df = as.data.frame(read.csv('DraculaSent.csv', header = FALSE))
names = c('JOY','FEAR','ANGER','SADNESS','DISGUST','SHAME','GUILT')
col1 = c()
col2= c()
col3 = c()
for(i in 1:7) {
for (j in 1:50) {
col1 = append(col1, df[i,j])
}
col2 = append(col2, rep(names[i], 50))
col3 = append(col3, seq(1,50))
}
max(col1)
View(col1)
source('~/Desktop/SentimentCap/StoryData/storyViz.R')
df[1,1]
df[1,2]
df[1,4]
df[1,4] > 1
col1 = c()
col2= c()
col3 = c()
for(i in 1:7) {
for (j in 1:50) {
col1 = append(col1, df[i,j])
if( df[i,j] > 1)
print(i,j)
}
col2 = append(col2, rep(names[i], 50))
col3 = append(col3, seq(1,50))
}
source('~/Desktop/SentimentCap/StoryData/storyViz.R')
df = as.data.frame(read.csv('DraculaSent.csv', header = FALSE))
for(i in 1:7) {
for (j in 1:50) {
col1 = append(col1, df[i,j])
print(df[i,j])
}
col2 = append(col2, rep(names[i], 50))
col3 = append(col3, seq(1,50))
}
max(col1)
min(col1)
col1 = c()
col2= c()
col3 = c()
for(i in 1:7) {
for (j in 1:50) {
col1 = append(col1, df[i,j])
print(df[i,j])
}
col2 = append(col2, rep(names[i], 50))
col3 = append(col3, seq(1,50))
}
min(col1)
source('~/Desktop/SentimentCap/StoryData/storyViz.R')
max(col1)
min(col1)
source('~/Desktop/SentimentCap/StoryData/storyViz.R')
max(col1)
shiny::runApp('storyApp')
source('~/Desktop/SentimentCap/StoryData/storyViz.R')
shiny::runApp('storyApp')
